---

- name: Compatibility check
  ansible.builtin.fail:
    msg: "This role is only compatible with Linux"
  when: ansible_system != 'Linux'

- name: Debug | ansible_distribution
  ansible.builtin.debug:
    var: ansible_distribution
- name: Include version-specific variables for Ubuntu.
  ansible.builtin.include_vars: "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
  when: ansible_distribution == 'Ubuntu'
- name: Include version-specific variables for Debian.
  ansible.builtin.include_vars: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
  when: ansible_distribution == 'Debian'
- name: Include version-specific variables for RedHat
  ansible.builtin.include_vars: "RedHat-{{ ansible_distribution_version.split('.')[0] }}.yml"
  when: ansible_os_family == "RedHat"
- name: Include version-specific variables for Alpine
  ansible.builtin.include_vars: "Alpine.yml"
  when: ansible_os_family == "Alpine"

- name: Set fact is_container
  ansible.builtin.set_fact:
    is_container: true
  when: >
    (ansible_virtualization_type is defined and
      (ansible_virtualization_type == "docker"
       or ansible_virtualization_type == "containerd"
       or ansible_virtualization_type == "container"
      )
    )

- name: Debian | update cache
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 3600
  when: ansible_os_family == 'Debian'
  register: pkg_result
  until: pkg_result is success

- name: Ensure sysctl package is present
  ansible.builtin.package:
    name: "{{ harden_sysctl_pkgs | default([]) }}"
    state: present

- name: Import sysctl
  ansible.builtin.import_tasks: sysctl.yml
